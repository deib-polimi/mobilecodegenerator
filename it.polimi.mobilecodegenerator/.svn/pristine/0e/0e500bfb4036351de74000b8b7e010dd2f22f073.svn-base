«IMPORT metamodel»

«DEFINE propertiesDeclarations FOR ViewController»
«FOREACH gridViews AS gv-»
@property(weak, nonatomic) IBOutlet UICollectionView *«gv.id»;
@property(strong, nonatomic) NSArray *«gv.id»Contents;
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE lazyInstantiations FOR ViewController»
«FOREACH gridViews AS gv-»
-(NSArray *)«gv.id»Contents {
    if(!_«gv.id»Contents){
    	_«gv.id»Contents = [[NSArray alloc] init];
    	«IF gv.gridViewCells.size!=0-»
		_«gv.id»Contents = @[
			«FOREACH gv.gridViewCells AS gvc-»
			@"«gvc.title»",
			«ENDFOREACH-»
		];
    	«ENDIF-»
    }
    return _«gv.id»Contents;
}
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE gridViews FOR ViewController»
«IF gridViews.size!=0-»
#pragma mark - Collection view DataSource 
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
	// Return the number of sections.
    return 1;
}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
	// Return the number of items in the section.
    «FOREACH gridViews AS gv-»
    if (collectionView == self.«gv.id») {
        return self.«gv.id»Contents.count;
    }
    «ENDFOREACH»
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
	static NSString *CellIdentifier = @"CellIdentifier";
    CustomCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:CellIdentifier forIndexPath:indexPath];

	«FOREACH gridViews AS gv-»
    if (collectionView == self.«gv.id») {
        cell.label.text = [self.«gv.id»Contents objectAtIndex:indexPath.item];
    }
    «ENDFOREACH»
	return cell;
}

#pragma mark - Collection view Delegate

-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
	«FOREACH gridViews AS gv-»
	«IF gv.clickListener!=null-»
    if (collectionView == self.«gv.id») {
        NSString *clickedItem = [self.«gv.id»Contents objectAtIndex:indexPath.item];
        «IF gv.clickListener.navigation!=null-»
       	«gv.clickListener.navigation.destination»ViewController *vc = [self.storyboard instantiateViewControllerWithIdentifier:@"«gv.clickListener.navigation.destination»ViewController"];
       	// Navigation logic may go here: configure properties of «gv.clickListener.navigation.destination»ViewController
       	[[self navigationController] pushViewController:vc animated:YES];
        «ELSE-»
		//TODO implement the action
		«ENDIF-»
    }
    «ENDIF-»
    «ENDFOREACH-»
    [collectionView deselectItemAtIndexPath:indexPath animated:YES];
}
«ENDIF-»
«ENDDEFINE»