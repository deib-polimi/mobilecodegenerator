package model_checks;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class JavaChecks {
	public static List<String> duplicatedIds(List<String> ids){
		ArrayList<String> duplicates = new ArrayList<String>();
		for(int i=0; i<ids.size(); i++)
			for(int j=0; j<ids.size(); j++){
				if(ids.get(i).equals(ids.get(j)) && i!=j && !duplicates.contains(ids.get(i)))
					duplicates.add(ids.get(i));
			}
		return duplicates;
	}
	
	
	
	public static List<String> invalidFilesNames(){
		String regex = "^[a-z0-9_]+";
		File folder = new File("utils/user_files");
		ArrayList<String> invalidFilesNames = new ArrayList<String>();
		for(File source : folder.listFiles()){
			if(source.isDirectory() || source.getName().length()<1 || source.getName().split("\\.").length!=2 || !source.getName().split("\\.")[0].matches(regex))
				invalidFilesNames.add(source.getName());
		}
		return invalidFilesNames;
	}
	
	public static boolean validAppName(String name){
		String regex = "^[a-zA-Z]+"; //empty string is not valid too
		if(!name.matches(regex))
			return false;
		return true;
	}
	
	public static boolean validCompanyIdentifier(String id){
		String regex = "^[a-z]+(\\.[a-z]+)*";
		if(!id.matches(regex))
			return false;
		return true;
	}
	
	public static List<String> invalidIds(List<String> ids){
		String regex = "^[a-zA-Z][a-zA-Z0-9_]*"; //empty string is not valid too
		ArrayList<String> invalidIds = new ArrayList<String>();
		for(String id : ids){
			if(!id.matches(regex))
				invalidIds.add(id);
		}
		return invalidIds;
	}
	
	public static List<String> invalidFilesExtensions(){
		File folder = new File("utils/user_files");
		ArrayList<String> invalidFilesExtensions = new ArrayList<String>();
		for(File source : folder.listFiles()){
			String sourceFileExtension = source.getName().split("\\.")[1];
			if(!(	sourceFileExtension.equalsIgnoreCase("html") ||
					sourceFileExtension.equalsIgnoreCase("txt") ||
					sourceFileExtension.equalsIgnoreCase("css") ||
					sourceFileExtension.equalsIgnoreCase("png") ||
					sourceFileExtension.equalsIgnoreCase("jpg") ||
					sourceFileExtension.equalsIgnoreCase("gif") ||
					sourceFileExtension.equalsIgnoreCase("mp4") ||
					sourceFileExtension.equalsIgnoreCase("3gp") ||
					sourceFileExtension.equalsIgnoreCase("mp3") )){
				invalidFilesExtensions.add(source.getName());
			}
		}
		return invalidFilesExtensions;
	}
	
	public static List<String> duplicatedFilesNames(){
		File folder = new File("utils/user_files");
		ArrayList<String> duplicatedFilesNames = new ArrayList<String>();
		for(int i=0; i<folder.listFiles().length; i++){
			for(int j=0; j<folder.listFiles().length; j++)
				if(i!=j && folder.listFiles()[i].getName().split("\\.")[0].equals(folder.listFiles()[j].getName().split("\\.")[0]) && !duplicatedFilesNames.contains(folder.listFiles()[i]))
					duplicatedFilesNames.add(folder.listFiles()[i].getName());
		}
		return duplicatedFilesNames;
	}
}
