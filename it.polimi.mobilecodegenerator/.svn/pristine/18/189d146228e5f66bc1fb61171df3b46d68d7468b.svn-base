«IMPORT metamodel»
«DEFINE main FOR Application»
«EXPAND viewController FOREACH viewControllers»
«ENDDEFINE»

«DEFINE viewController FOR ViewController»

«FILE application.name +"/"+application.name +"/"+ name+"ViewController.h"-»
#import <UIKit/UIKit.h>
@interface «name»ViewController : UIViewController «IF listViews.size!=0-»<UITableViewDelegate, UITableViewDataSource>«ENDIF-»
//TODO
@end
«ENDFILE-»

«FILE application.name +"/"+application.name +"/"+ name+"ViewController.m"-»
#import "«name»ViewController.h"
@interface «name»ViewController ()
	//TODO
	«FOREACH webViews AS wv-»
		@property(weak, nonatomic) IBOutlet UIWebView *«wv.id»;
	«ENDFOREACH-»
	«FOREACH listViews AS lv-»
		@property(weak, nonatomic) IBOutlet UITableView *«lv.id»;
		@property(strong, nonatomic) NSArray *«lv.id»Contents;
	«ENDFOREACH-»
@end

@implementation «name»ViewController
«FOREACH listViews AS lv-»
-(NSArray *)«lv.id»Contents {
    if(!_«lv.id»Contents){
    	_«lv.id»Contents = [[NSArray alloc] init];
    	«IF lv.listViewCells.size!=0-»
		_«lv.id»Contents = @[
			«FOREACH lv.listViewCells AS lvc-»
			@"«lvc.title»",
			«ENDFOREACH-»
		];
    	«ENDIF-»
    }
    return _«lv.id»Contents;
}
«ENDFOREACH-»

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
	
	«FOREACH webViews AS wv-»
	NSString *«wv.id»FileName = @"«wv.HTMLFileName.split("\\.").get(0)»";
	NSString *«wv.id»FilePath = [[NSBundle mainBundle] pathForResource:«wv.id»FileName ofType:@"html"];
	NSString *«wv.id»DataString = [NSString stringWithContentsOfFile:«wv.id»FilePath encoding:NSUTF8StringEncoding error:nil];
	[self.«wv.id» loadHTMLString:«wv.id»DataString baseURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] bundlePath]]];
	«ENDFOREACH»
}

«IF listViews.size!=0-»
#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    // Return the number of rows in the section.
    «FOREACH listViews AS lv-»
    if (tableView == self.«lv.id») {
        return «lv.listViewCells.size»;
    }
    «ENDFOREACH»
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"CellIdentifier";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];

	«FOREACH listViews AS lv-»
    if (tableView == self.«lv.id») {
        cell.textLabel.text = [self.«lv.id»Contents objectAtIndex:indexPath.row];
    }
    «ENDFOREACH»
	return cell;
}

#pragma mark - Table view delegate
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Navigation logic may go here. Create and push another view controller.
    /*
    <#DetailViewController#> *detailViewController = [[<#DetailViewController#> alloc] initWithNibName:@"<#Nib name#>" bundle:nil];
    // ...
    // Pass the selected object to the new view controller.
    [self.navigationController pushViewController:detailViewController animated:YES];
 	*/
	
	if (tableView == self.«listViews.get(0).id») {
		NSString *clickedItemText = [self.«listViews.get(0).id»Contents objectAtIndex:indexPath.row];
        NSLog(@"Clicked item with text: %@", clickedItemText); «REM»Rimuovere la stampa a video!«ENDREM»
	}
	«FOREACH listViews AS lv-»
	«IF lv!=listViews.get(0)-»
    else if (tableView == self.«lv.id») {
        NSString *clickedItemText = [self.«lv.id»Contents objectAtIndex:indexPath.row];
        NSLog(@"Clicked item with text: %@", clickedItemText); «REM»Rimuovere la stampa a video!«ENDREM»
    }
    «ENDIF-»
    «ENDFOREACH-»
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}
«ENDIF-»

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)viewWillAppear:(BOOL)animated
{
	[super viewWillAppear:animated];
	// Auto-generated method stub
}
- (void)viewWillDisappear:(BOOL)animated
{
	[super viewWillDisappear:animated];
	// Auto-generated method stub
}
- (void)viewDidDisappear:(BOOL)animated
{
	[super viewDidDisappear:animated];
	// Auto-generated method stub
}

@end
«ENDFILE-»

«ENDDEFINE»
