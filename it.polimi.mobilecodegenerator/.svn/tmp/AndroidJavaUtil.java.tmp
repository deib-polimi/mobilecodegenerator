package android_extensions;

import java.io.File;

import app_extensions.AppJavaUtil;

public class AndroidJavaUtil {
	
	//deletes application code folder and its content (if already exists)
	public static void deleteApplicationFolder(){
		File androidAppFolder = new File(AndroidConstants.destinationFilesFolder);
		AppJavaUtil.deleteFolder(androidAppFolder);
	}
	
	public static void copyUserFiles(){
		File folder = new File("utils/user_files");
		for(File source : folder.listFiles()){
			String sourceFileName = source.getName();
<<<<<<< .mine
			String sourceFileExtension = sourceFileName.substring(sourceFileName.lastIndexOf('.')+1);
			if(sourceFileExtension.equalsIgnoreCase("html") || sourceFileExtension.equals("HTML")){
=======
			String sourceFileExtension = source.getName().split("\\.")[1];
			if(sourceFileExtension.equalsIgnoreCase("html")){
>>>>>>> .r42
				File destination = new File(AndroidConstants.rawFolder+"/"+sourceFileName);
				AppJavaUtil.copyFile(source, destination);
			}
<<<<<<< .mine
			else if(sourceFileExtension.equalsIgnoreCase("css") || sourceFileExtension.equals("CSS")){
=======
			else if(sourceFileExtension.equalsIgnoreCase("css")){
>>>>>>> .r42
				File destination = new File(AndroidConstants.assetsFolder+"/"+sourceFileName);
				AppJavaUtil.copyFile(source, destination);
			}
			else if(sourceFileExtension.equalsIgnoreCase("png") || sourceFileExtension.equalsIgnoreCase("jpg") || sourceFileExtension.equalsIgnoreCase("gif")){
				File destination = new File(AndroidConstants.drawableFolder+"/"+sourceFileName);
				AppJavaUtil.copyFile(source, destination);
			}
<<<<<<< .mine
			else if(sourceFileExtension.equalsIgnoreCase("mp4") || sourceFileExtension.equals("3gp")){
=======
			else if(sourceFileExtension.equalsIgnoreCase("mp4") || sourceFileExtension.equalsIgnoreCase("3gp")){
>>>>>>> .r42
				File destination = new File(AndroidConstants.rawFolder+"/"+sourceFileName);
				AppJavaUtil.copyFile(source, destination);
			}
			else if(sourceFileExtension.equalsIgnoreCase("mp3")){
				File destination = new File(AndroidConstants.assetsFolder+"/"+sourceFileName);
				AppJavaUtil.copyFile(source, destination);
			}
		}
	}
	
	public static void copyDefaultAndroidFiles(){
		new File(AndroidConstants.destinationFilesFolder+"/libs").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/assets").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/drawable").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/drawable-hdpi").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/drawable-mdpi").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/drawable-xhdpi").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/drawable-xxhdpi").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/menu").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/raw").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/values").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/values-v11").mkdirs();
		new File(AndroidConstants.destinationFilesFolder+"/res/values-v14").mkdirs();
		
		for(int i=0; i<AndroidConstants.sourceFilesPaths.length; i++){
			File source = new File(AndroidConstants.sourceFilesPaths[i]);
			File destination = new File(AndroidConstants.destinationFilesPaths[i]);
			AppJavaUtil.copyFile(source, destination);
		}
	}
}
